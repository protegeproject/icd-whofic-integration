<?xml version = "1.0" encoding = "utf-8"?>
<project name = "Import ICHI">
	<property file="local.properties"/>
	<property name = "owl.path"         value = "edu.stanford.smi.protegex.owl"/>
	<property name = "owl.plugin.path"  value = "${protege.home}/plugins/${owl.path}"/>
	<property name = "icd.path"         value = "${protege.home}/plugins/edu.stanford.bmir.icd.misc"/>
	<property name = "lib"             location = "./lib"/>
	<property name = "log4j.config.file" value = "log4j.properties" />

	<!-- 
     #  ********** Finding Protege Libraries. *************
   -->

	<target name="checkProtegeHome">
		<condition property="protege.home.set">
			<available file="${protege.home}/protege.jar" type="file"/>
		</condition>
	</target>

	<target name="useProtegeHome" depends="checkProtegeHome" if="protege.home.set">
		<echo message="Using Protege Home = ${protege.home} to find protege jars"/>
		<property name="protege.lib" value="${protege.home}/protege.jar"/>
		<property name="protege.owl.lib" value="${protege.home}/plugins/${owl.path}/protege-owl.jar"/>
	</target>


	<target name = "checkProtegeLibs" depends="useProtegeHome">
		<condition property="libs.found">
			<and>
				<available file="${protege.lib}" type = "file"/>
				<available file="${protege.owl.lib}" type = "file"/>
			</and>
		</condition>
		<path id = "project.classpath">
			<pathelement location = "${protege.lib}"/>
			<pathelement location = "${protege.home}/driver.jar"/>
			<pathelement location = "${log4j.config.file}"/>
			<fileset dir="${owl.plugin.path}"/>
			<fileset dir="${icd.path}"/>
			<fileset dir="./lib" />
		</path>

	</target>

	<target name="checkProtegeLibsAndReport" depends="checkProtegeLibs"
            unless="libs.found">
		<echo message="Missing protege libraries.  You need to set "/>
		<echo message="the PROTEGE_HOME environment variable to a"/>
		<echo message="protege installation directory where the"/>
		<echo message="appropriate plugins have been installed."/>
		<echo message="Alternatively set the jar libs in local.properties (protege.lib=...)"/>
		<echo message="Use the -v option to ant to see what jars are missing."/>
		<fail message = "missing protege libraries"/>
	</target>

	
	<!-- ICHI import targets -->

	<target name="action" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHIActionAndMeansImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${action.file}" />
			<arg value="${action.topcls}" />
		</java>
	</target>

	<target name="means" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHIActionAndMeansImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${means.file}" />
			<arg value="${means.topcls}" />
		</java>
	</target>	
	
	<target name="target" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHITargetImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${target.file}" />
			<arg value="${target.topcls}" />
		</java>
	</target>
	
	<target name="interventions" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHIInterventionsImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${interventions.file}" />
			<arg value="${interventions.topcls}" />
		</java>
	</target>
	
	<target name="xcodes" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHIExtensionCodesImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${xcodes.file}" />
			<arg value="${xcodes.topcls}" />
		</java>
	</target>
	
	<target name="index.terms" depends="checkProtegeLibsAndReport">
		<java 
				fork="true" 
		        	dir="." 
		            	classname="org.who.integration.ichi.ICHIExtensionCodesImporter"
	                        maxmemory="${heap.size.max}">
			<classpath refid = "project.classpath"/>
			<arg value="${icd.pprj.file}" />
			<arg value="${ichi.index.terms.file}" />
		</java>
	</target>
	
</project>
